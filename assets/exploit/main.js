/* eslint camelcase: "off" */
/* eslint no-redeclare: "off" */
/* eslint no-eval: "off" */
/* global alert, WebSocket */
var reservedWords = require('reserved-words');

var SploitCore = require('./sploitcore');
window.IPCMessage = require('./ipc');
var utils = require('./utils');
var runNro = require('./runNro');
var nspwn = require('./nspwn');
var config = require('./config');

var socket;

window.onerror = function (msg, url, line, col, error) {
	if (msg === 'Out of memory') { alert(msg); }

	var stack = error ? error.stack : null;

	utils.send('error', [line, msg, stack]);
	if (socket) {
		socket.send(JSON.stringify({
			type: 'error',
			response: [ line, msg, stack ]
		}));
	}
	// location.reload();
};

utils.log('Loaded');

function main () {
	// Find out firmware version
	if (navigator.userAgent.indexOf('NF/4.0.0.4.25 ') !== -1) {
		utils.version = 100;
	} else if (navigator.userAgent.indexOf('NF/4.0.0.5.9 ') !== -1) {
		utils.version = 200;
	} else if (navigator.userAgent.indexOf('NF/4.0.0.5.10 ') !== -1) {
		utils.version = 210;
	} else if (navigator.userAgent.indexOf('NF/4.0.0.6.9 ') !== -1) {
		utils.version = 300;
	} else if (navigator.userAgent.indexOf('NF/4.0.0.7.9 ') !== -1) {
		utils.version = 400;
	} else if (navigator.userAgent.indexOf('NF/4.0.0.8.9 ') !== -1) {
		utils.version = 500;
	} else if (navigator.userAgent.indexOf('NF/4.0.0.9.3 ') !== -1) {
		utils.version = 510;
	} else if (navigator.userAgent.indexOf('NF/4.0.0.10.13 ') !== -1) {
		utils.version = 600;
	} else {
		utils.log('Unknown firmware version detected!');
	}
	
	if (window.exploitMe === null) {
		utils.log('Exploit failed.');
		if (window.errmsg === null) { utils.log('Unknown reason.'); } else { utils.log(window.errmsg); }
		utils.log('~~failed');
		window.location.reload();
		return;
	}

	utils.log('Exploit triggered. Beginning breakage.');
	var sc = window.sc = new SploitCore(window.exploitMe); // Keep SC in window just so the GC never even tries to wipe us out. Just for sanity.

	var xhr = new XMLHttpRequest();
	xhr.open('GET', '/scripts/'+window.location.hash.substring(1)+".js", false);
	xhr.send(null);

	if (xhr.status === 200) {
		eval('with (sc) {\n' + xhr.responseText + '\n}');
	}
}

try {
	main();
} catch (e) {
	window.onerror(e.message, null, e.line, null, e);
}
